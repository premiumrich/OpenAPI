=begin
Trulioo Ruby SDK

Gem version: 1.0.0
Trulioo OpenAPI version: v1
Generated by OpenAPI Generator version: 5.0.1
=end

require "spec_helper"
require "securerandom"

describe Trulioo::DatasourceField do
  let(:model) { Trulioo::DatasourceField.new }
  let(:test_attributes) {
    {
      field_name: SecureRandom.alphanumeric(10),
      status: SecureRandom.alphanumeric(10),
      field_group: SecureRandom.alphanumeric(10),
      match_precision: SecureRandom.alphanumeric(10),
    }
  }

  it "should have correct array of acceptable JSON keys" do
    expect(Trulioo::DatasourceField.acceptable_attributes).to eql([
      :"FieldName",
      :"Status",
      :"MatchPrecision",
      :"FieldGroup",
    ])
  end

  it "should have correct array of acceptable attribute types" do
    expect(Trulioo::DatasourceField.openapi_types.values).to eql([
      :"String",
      :"String",
      :"String",
      :"String",
    ])
  end

  it "should have correct set of nullable attributes" do
    expect(Trulioo::DatasourceField.openapi_nullable).to eql(Set.new([]))
  end

  it "should have correct array of invalid properties" do
    expected_invalid_properties = Array.new

    expect(model.list_invalid_properties).to eql(expected_invalid_properties)
  end

  it "should perform any validation in custom attribute writers" do
  end

  it "should correctly initialize with attributes from Hash" do
    model = Trulioo::DatasourceField.new(test_attributes)

    expect(model.field_name).to be(test_attributes[:field_name])
    expect(model.status).to be(test_attributes[:status])
    expect(model.field_group).to be(test_attributes[:field_group])
    expect(model.match_precision).to be(test_attributes[:match_precision])

    expect(model.valid?).to be true
  end

  it "should not initialize with a non-Hash argument" do
    expect { Trulioo::DatasourceField.new([]) }.to raise_error(ArgumentError)
  end

  it "should not initialize with a Hash that contains an invalid attribute" do
    expect { Trulioo::DatasourceField.new({ test_invalid_key: "" }) }.to raise_error(ArgumentError)
  end

  it "should correctly check object equality" do
    model.field_name = test_attributes[:field_name]

    expect(model).to equal(model)
    expect(model).to eql(Trulioo::DatasourceField.new({ field_name: test_attributes[:field_name] }))
  end

  it "should correctly calculate hash code" do
    model.field_name = test_attributes[:field_name]

    expect(Trulioo::DatasourceField.new({ field_name: test_attributes[:field_name] }).hash).to eql(model.hash)
  end
end
