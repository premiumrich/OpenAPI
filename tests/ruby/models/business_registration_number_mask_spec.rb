=begin
Trulioo Ruby SDK

Gem version: 1.0.0
Trulioo OpenAPI version: v1
Generated by OpenAPI Generator version: 5.0.1
=end

require "spec_helper"
require "securerandom"

describe Trulioo::BusinessRegistrationNumberMask do
  let(:model) { Trulioo::BusinessRegistrationNumberMask.new }
  let(:test_attributes) {
    {
      mask: SecureRandom.alphanumeric(512),
      ignore_whitespace: true,
      ignore_special_character: true,
    }
  }

  it "should have correct array of acceptable JSON keys" do
    expect(Trulioo::BusinessRegistrationNumberMask.acceptable_attributes).to eql([
      :"Mask",
      :"IgnoreWhitespace",
      :"IgnoreSpecialCharacter",
    ])
  end

  it "should have correct array of acceptable attribute types" do
    expect(Trulioo::BusinessRegistrationNumberMask.openapi_types.values).to eql([
      :"String",
      :"Boolean",
      :"Boolean",
    ])
  end

  it "should have correct set of nullable attributes" do
    expect(Trulioo::BusinessRegistrationNumberMask.openapi_nullable).to eql(Set.new([]))
  end

  it "should have correct array of invalid properties" do
    expected_invalid_properties = Array.new

    model.instance_variable_set(:@mask, SecureRandom.alphanumeric(512 + 1))
    expected_invalid_properties.push('invalid value for "mask", the character length must be smaller than or equal to 512.')

    expect(model.list_invalid_properties).to eql(expected_invalid_properties)
  end

  it "should perform any validation in custom attribute writers" do
    expect { model.mask = SecureRandom.alphanumeric(512 + 1) }.to raise_error(ArgumentError)
  end

  it "should correctly initialize with attributes from Hash" do
    model = Trulioo::BusinessRegistrationNumberMask.new(test_attributes)

    expect(model.mask).to be(test_attributes[:mask])
    expect(model.ignore_whitespace).to be(test_attributes[:ignore_whitespace])
    expect(model.ignore_special_character).to be(test_attributes[:ignore_special_character])

    expect(model.valid?).to be true
  end

  it "should not initialize with a non-Hash argument" do
    expect { Trulioo::BusinessRegistrationNumberMask.new([]) }.to raise_error(ArgumentError)
  end

  it "should not initialize with a Hash that contains an invalid attribute" do
    expect { Trulioo::BusinessRegistrationNumberMask.new({ test_invalid_key: "" }) }.to raise_error(ArgumentError)
  end

  it "should correctly check object equality" do
    model.mask = test_attributes[:mask]

    expect(model).to equal(model)
    expect(model).to eql(Trulioo::BusinessRegistrationNumberMask.new({ mask: test_attributes[:mask] }))
  end

  it "should correctly calculate hash code" do
    model.mask = test_attributes[:mask]

    expect(Trulioo::BusinessRegistrationNumberMask.new({ mask: test_attributes[:mask] }).hash).to eql(model.hash)
  end
end
