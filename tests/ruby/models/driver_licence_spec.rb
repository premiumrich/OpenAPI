=begin
Trulioo Ruby SDK

Gem version: 1.0.0
Trulioo OpenAPI version: v1
Generated by OpenAPI Generator version: 5.0.1
=end

require "spec_helper"
require "securerandom"

describe Trulioo::DriverLicence do
  let(:model) { Trulioo::DriverLicence.new }
  let(:test_attributes) {
    {
      number: SecureRandom.alphanumeric(10),
      state: SecureRandom.alphanumeric(10),
      day_of_expiry: 123,
      month_of_expiry: 123,
      year_of_expiry: 123,
    }
  }

  it "should have correct array of acceptable JSON keys" do
    expect(Trulioo::DriverLicence.acceptable_attributes).to eql([
      :"Number",
      :"State",
      :"DayOfExpiry",
      :"MonthOfExpiry",
      :"YearOfExpiry",
    ])
  end

  it "should have correct array of acceptable attribute types" do
    expect(Trulioo::DriverLicence.openapi_types.values).to eql([
      :"String",
      :"String",
      :"Integer",
      :"Integer",
      :"Integer",
    ])
  end

  it "should have correct set of nullable attributes" do
    expect(Trulioo::DriverLicence.openapi_nullable).to eql(Set.new([]))
  end

  it "should have correct array of invalid properties" do
    expected_invalid_properties = Array.new

    expect(model.list_invalid_properties).to eql(expected_invalid_properties)
  end

  it "should perform any validation in custom attribute writers" do
  end

  it "should correctly initialize with attributes from Hash" do
    model = Trulioo::DriverLicence.new(test_attributes)

    expect(model.number).to be(test_attributes[:number])
    expect(model.state).to be(test_attributes[:state])
    expect(model.day_of_expiry).to be(test_attributes[:day_of_expiry])
    expect(model.month_of_expiry).to be(test_attributes[:month_of_expiry])
    expect(model.year_of_expiry).to be(test_attributes[:year_of_expiry])

    expect(model.valid?).to be true
  end

  it "should not initialize with a non-Hash argument" do
    expect { Trulioo::DriverLicence.new([]) }.to raise_error(ArgumentError)
  end

  it "should not initialize with a Hash that contains an invalid attribute" do
    expect { Trulioo::DriverLicence.new({ test_invalid_key: "" }) }.to raise_error(ArgumentError)
  end

  it "should correctly check object equality" do
    model.number = test_attributes[:number]

    expect(model).to equal(model)
    expect(model).to eql(Trulioo::DriverLicence.new({ number: test_attributes[:number] }))
  end

  it "should correctly calculate hash code" do
    model.number = test_attributes[:number]

    expect(Trulioo::DriverLicence.new({ number: test_attributes[:number] }).hash).to eql(model.hash)
  end
end
