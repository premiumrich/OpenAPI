=begin
Trulioo Ruby SDK

Gem version: 1.0.0
Trulioo OpenAPI version: v1
Generated by OpenAPI Generator version: 5.0.1
=end

require "spec_helper"
require "securerandom"

describe Trulioo::Business do
  let(:model) { Trulioo::Business.new }
  let(:test_attributes) {
    {
      business_name: SecureRandom.alphanumeric(10),
      business_registration_number: SecureRandom.alphanumeric(10),
      day_of_incorporation: 123,
      month_of_incorporation: 123,
      year_of_incorporation: 123,
      jurisdiction_of_incorporation: SecureRandom.alphanumeric(10),
      shareholder_list_document: true,
      financial_information_document: true,
      duns_number: SecureRandom.alphanumeric(10),
      entities: true,
    }
  }

  it "should have correct array of acceptable JSON keys" do
    expect(Trulioo::Business.acceptable_attributes).to eql([
      :"BusinessName",
      :"BusinessRegistrationNumber",
      :"DayOfIncorporation",
      :"MonthOfIncorporation",
      :"YearOfIncorporation",
      :"JurisdictionOfIncorporation",
      :"ShareholderListDocument",
      :"FinancialInformationDocument",
      :"DunsNumber",
      :"Entities",
    ])
  end

  it "should have correct array of acceptable attribute types" do
    expect(Trulioo::Business.openapi_types.values).to eql([
      :"String",
      :"String",
      :"Integer",
      :"Integer",
      :"Integer",
      :"String",
      :"Boolean",
      :"Boolean",
      :"String",
      :"Boolean",
    ])
  end

  it "should have correct set of nullable attributes" do
    expect(Trulioo::Business.openapi_nullable).to eql(Set.new([]))
  end

  it "should have correct array of invalid properties" do
    expected_invalid_properties = Array.new

    expect(model.list_invalid_properties).to eql(expected_invalid_properties)
  end

  it "should perform any validation in custom attribute writers" do
  end

  it "should correctly initialize with attributes from Hash" do
    model = Trulioo::Business.new(test_attributes)

    expect(model.business_name).to be(test_attributes[:business_name])
    expect(model.business_registration_number).to be(test_attributes[:business_registration_number])
    expect(model.day_of_incorporation).to be(test_attributes[:day_of_incorporation])
    expect(model.month_of_incorporation).to be(test_attributes[:month_of_incorporation])
    expect(model.year_of_incorporation).to be(test_attributes[:year_of_incorporation])
    expect(model.jurisdiction_of_incorporation).to be(test_attributes[:jurisdiction_of_incorporation])
    expect(model.shareholder_list_document).to be(test_attributes[:shareholder_list_document])
    expect(model.financial_information_document).to be(test_attributes[:financial_information_document])
    expect(model.duns_number).to be(test_attributes[:duns_number])
    expect(model.entities).to be(test_attributes[:entities])

    expect(model.valid?).to be true
  end

  it "should not initialize with a non-Hash argument" do
    expect { Trulioo::Business.new([]) }.to raise_error(ArgumentError)
  end

  it "should not initialize with a Hash that contains an invalid attribute" do
    expect { Trulioo::Business.new({ test_invalid_key: "" }) }.to raise_error(ArgumentError)
  end

  it "should correctly check object equality" do
    model.business_name = test_attributes[:business_name]

    expect(model).to equal(model)
    expect(model).to eql(Trulioo::Business.new({ business_name: test_attributes[:business_name] }))
  end

  it "should correctly calculate hash code" do
    model.business_name = test_attributes[:business_name]

    expect(Trulioo::Business.new({ business_name: test_attributes[:business_name] }).hash).to eql(model.hash)
  end
end
