=begin
Trulioo Ruby SDK

Gem version: 1.0.0
Trulioo OpenAPI version: v1
Generated by OpenAPI Generator version: 5.0.1
=end

require "spec_helper"
require "securerandom"

describe Trulioo::VerifyResult do
  let(:model) { Trulioo::VerifyResult.new }
  let(:test_attributes) {
    {
      transaction_id: SecureRandom.alphanumeric(10),
      uploaded_dt: Time.at(rand * Time.now.to_i),
      country_code: SecureRandom.alphanumeric(10),
      product_name: SecureRandom.alphanumeric(10),
      record: Trulioo::Record.new,
      customer_reference_id: SecureRandom.alphanumeric(10),
      errors: [],
    }
  }

  it "should have correct array of acceptable JSON keys" do
    expect(Trulioo::VerifyResult.acceptable_attributes).to eql([
      :"TransactionID",
      :"UploadedDt",
      :"CountryCode",
      :"ProductName",
      :"Record",
      :"CustomerReferenceID",
      :"Errors",
    ])
  end

  it "should have correct array of acceptable attribute types" do
    expect(Trulioo::VerifyResult.openapi_types.values).to eql([
      :"String",
      :"Time",
      :"String",
      :"String",
      :"Record",
      :"String",
      :"Array<ServiceError>",
    ])
  end

  it "should have correct set of nullable attributes" do
    expect(Trulioo::VerifyResult.openapi_nullable).to eql(Set.new([]))
  end

  it "should have correct array of invalid properties" do
    expected_invalid_properties = Array.new

    expect(model.list_invalid_properties).to eql(expected_invalid_properties)
  end

  it "should perform any validation in custom attribute writers" do
  end

  it "should correctly initialize with attributes from Hash" do
    model = Trulioo::VerifyResult.new(test_attributes)

    expect(model.transaction_id).to be(test_attributes[:transaction_id])
    expect(model.uploaded_dt).to be(test_attributes[:uploaded_dt])
    expect(model.country_code).to be(test_attributes[:country_code])
    expect(model.product_name).to be(test_attributes[:product_name])
    expect(model.record).to be(test_attributes[:record])
    expect(model.customer_reference_id).to be(test_attributes[:customer_reference_id])
    expect(model.errors).to be(test_attributes[:errors])

    expect(model.valid?).to be true
  end

  it "should not initialize with a non-Hash argument" do
    expect { Trulioo::VerifyResult.new([]) }.to raise_error(ArgumentError)
  end

  it "should not initialize with a Hash that contains an invalid attribute" do
    expect { Trulioo::VerifyResult.new({ test_invalid_key: "" }) }.to raise_error(ArgumentError)
  end

  it "should correctly check object equality" do
    model.transaction_id = test_attributes[:transaction_id]

    expect(model).to equal(model)
    expect(model).to eql(Trulioo::VerifyResult.new({ transaction_id: test_attributes[:transaction_id] }))
  end

  it "should correctly calculate hash code" do
    model.transaction_id = test_attributes[:transaction_id]

    expect(Trulioo::VerifyResult.new({ transaction_id: test_attributes[:transaction_id] }).hash).to eql(model.hash)
  end
end
