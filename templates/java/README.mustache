# {{artifactDescription}}

- Artifact version: {{artifactVersion}}
- API version: {{appVersion}}
- Build package: {{generatorClass}}

## Installation

Java 1.8 or later is required.

### With [Maven](https://maven.apache.org/)

Add this dependency to your project's POM:

```xml
<dependency>
    <groupId>{{groupId}}</groupId>
    <artifactId>{{artifactId}}</artifactId>
    <version>{{artifactVersion}}</version>
</dependency>
```

### With [Gradle](https://gradle.org/)

Add this dependency to your project's build file:

```groovy
implementation '{{groupId}}:{{artifactId}}:{{artifactVersion}}'
```

### With JAR

Build the JAR with [Maven](https://maven.apache.org/) by running:

```shell
mvn clean package
```

Then manually install the following JARs:

- `target/{{{artifactId}}}-{{{artifactVersion}}}.jar`
- `target/lib/*.jar`

## Sample Application

Check out our sample application for this SDK in the
[sample-app](https://github.com/{{gitUserId}}/{{gitRepoId}}/tree/{{artifactVersion}}/sample-app) folder.

## Getting Started

It is recommended to create an instance of `ApiClient` per thread in a multithreaded environment to avoid any potential
issues.

### Example of testing authentication

```java
import {{{invokerPackage}}}.ApiClient;
import {{{invokerPackage}}}.ApiException;
import {{{invokerPackage}}}.Configuration;
import {{{invokerPackage}}}.auth.ApiKeyAuth;
import {{{apiPackage}}}.ConnectionApi;

public class TestAuthenticationExample {

    public static void main(String[] args) {
        // Configure API key authorization
        ApiKeyAuth auth = (ApiKeyAuth) Configuration.getDefaultApiClient().getAuthentication("ApiKeyAuth");
        auth.setApiKey("YOUR-X-TRULIOO-API-KEY");

        // Configure mode: "trial" or "live"
        String mode = "trial";

        // Construct instance of ConnectionApi with default ApiClient
        ConnectionApi connectionApi = new ConnectionApi();

        // Call ConnectionApi#testAuthentication
        try {
            String result = connectionApi.testAuthentication(mode);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling ConnectionApi#testAuthentication");
            System.err.println("Status code:      " + e.getCode());
            System.err.println("Reason:           " + e.getResponseBody());
            System.err.println("Response headers: " + e.getResponseHeaders().toString());
        }
    }

}
```

## Testing

With [Maven](https://maven.apache.org/), run:

```bash
mvn clean test
```

## Documentation for APIs

All URIs are relative to *{{basePath}}*.

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{commonPath}}{{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
## Documentation for Models

{{#models}}{{#model}} - [{{classname}}]({{modelDocPath}}{{classname}}.md)
{{/model}}{{/models}}
## Documentation for Authorization

{{^authMethods}}All endpoints do not require authorization.
{{/authMethods}}
{{#authMethods}}### {{name}}

{{#isApiKey}}
- **Type**: API key
- **API key parameter name**: {{keyParamName}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}
{{/isApiKey}}
{{#isBasic}}

- **Type**: HTTP basic authentication
{{/isBasic}}
{{#isOAuth}}

- **Type**: OAuth
- **Flow**: {{flow}}
- **Authorization URL**: {{authorizationUrl}}
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}  - {{scope}}: {{description}}
{{/scopes}}
{{/isOAuth}}
{{/authMethods}}
