# {{projectDescription}}

- API version: {{appVersion}}
{{#artifactVersion}}
- Package version: {{artifactVersion}}
{{/artifactVersion}}
{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Build package: {{generatorClass}}

## Installation

### With [Composer](http://getcomposer.org/)

PHP 7.2 or later is required.

Run `composer require {{packageName}}` in the root directory of your project, or add this dependency to
`composer.json`:

```json
{
  "require": {
    "{{packageName}}": "^{{artifactVersion}}"
  }
}
```

## Sample Application

Check out our sample application for this SDK in the
[sample-app](https://github.com/{{gitUserId}}/{{gitRepoId}}/tree/{{artifactVersion}}/sample-app) folder.

## Getting Started

```php
require_once(__DIR__ . '/vendor/autoload.php');

$configuration = OpenAPI\Client\Configuration::getDefaultConfiguration();
// Configure API key authorization: ApiKeyAuth
$configuration->setApiKey('x-trulioo-api-key', 'YOUR-X-TRULIOO-API-KEY');

// If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
// This is optional, `GuzzleHttp\Client` will be used as default.
$connectionApi = new OpenAPI\Client\Api\ConnectionApi(new GuzzleHttp\Client(), $config);

$mode = 'trial';

try {
    $result = $connectionApi->testAuthentication($mode);
    echo $result;
} catch (Exception $e) {
    echo 'Exception when calling ConnectionApi->testAuthentication: ', $e->getMessage(), PHP_EOL;
}
```

## Testing

Install dependencies with [Composer](http://getcomposer.org/) by running `composer install`, then run:

```bash
./run-tests.sh
```

## Documentation for APIs

All URIs are relative to *{{basePath}}*.

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{classname}}* | [**{{operationId}}**]({{apiDocPath}}/{{classname}}.md#{{operationIdLowerCase}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
## Documentation for Models

{{#models}}{{#model}}- [{{{classname}}}]({{modelDocPath}}/{{{classname}}}.md){{/model}}
{{/models}}

## Documentation for Authorization
{{^authMethods}}

All endpoints do not require authorization.
{{/authMethods}}
{{#authMethods}}
{{#last}} Authentication schemes defined for the API:{{/last}}
### {{{name}}}
{{#isApiKey}}

- **Type**: API key
- **API key parameter name**: {{{keyParamName}}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}
{{/isApiKey}}
{{#isBasic}}
{{#isBasicBasic}}

- **Type**: HTTP basic authentication
{{/isBasicBasic}}
{{#isBasicBearer}}

- **Type**: Bearer authentication{{#bearerFormat}} ({{{.}}}){{/bearerFormat}}
{{/isBasicBearer}}
{{/isBasic}}
{{#isOAuth}}

- **Type**: `OAuth`
- **Flow**: `{{{flow}}}`
- **Authorization URL**: `{{{authorizationUrl}}}`
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}
    - **{{{scope}}}**: {{{description}}}
{{/scopes}}
{{/isOAuth}}
{{/authMethods}}
